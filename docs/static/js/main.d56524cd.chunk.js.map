{"version":3,"sources":["components/AddCategory.js","components/GifItem.js","components/helpers/getGifs.js","components/GifList.js","components/hooks/useFecthGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","onClick","GifItem","id","title","url","className","key","src","alt","getImages","category","a","URL","encodeURI","fetch","res","json","data","gifs","map","img","images","downsized_medium","GifList","loading","state","setstate","useEffect","then","useFetchGifs","GifExpertApp","hi","categories","ReactDOM","render","document","getElementById"],"mappings":"mNAGaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EAEVC,mBAAS,IAFC,mBAExCC,EAFwC,KAE5BC,EAF4B,KAgBhD,OACE,0BAAMC,SATa,SAACC,GACpBA,EAAEC,iBACEJ,EAAWK,OAAOC,OAAS,IAC7BR,GAAc,SAAAS,GAAI,OAAMP,GAAN,mBAAqBO,OACvCN,EAAc,OAMd,2BACEO,KAAK,OACLC,MAAQT,EACRU,SAjBoB,SAACP,GACrBA,GAAGF,EAAcE,EAAEQ,OAAOF,QAiB1BG,QAAU,WAAQX,EAAc,SCfzBY,EARQ,SAAC,GAAwB,IAAtBC,EAAqB,EAArBA,GAAIC,EAAiB,EAAjBA,MAAOC,EAAU,EAAVA,IACnC,OACE,yBAAKC,UAAU,0CACb,yBAAKC,IAAMJ,EAAKK,IAAMH,EAAMI,IAAML,IAClC,+BAAMA,K,uBCNCM,EAAS,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACjBC,EADiB,iDACgCC,UAAUH,GAD1C,+DAELI,MAAMF,GAFD,cAEjBG,EAFiB,gBAGAA,EAAIC,OAHJ,uBAGfC,EAHe,EAGfA,KAEFC,EAAOD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EAC3B,MAAO,CACLlB,GAAIkB,EAAIlB,GACRC,MAAOiB,EAAIjB,MACXC,IAAG,UAAEgB,EAAIC,cAAN,aAAE,EAAYC,iBAAiBlB,QATf,kBAchBc,GAdgB,4CAAH,sDCITK,EAAU,SAAC,GAAkB,IAAhBb,EAAe,EAAfA,SAAe,ECDb,SAAEA,GAAe,IAAD,EAEdvB,mBAAS,CACnC8B,KAAM,GACNO,SAAS,IAJ+B,mBAElCC,EAFkC,KAE3BC,EAF2B,KAiB1C,OAVAC,qBAAU,WACRlB,EAAUC,GACPkB,MAAK,SAAAR,GACJM,EAAS,CACPT,KAAMG,EACNI,SAAS,SAGd,CAAEd,IAEEe,EDd2BI,CAAanB,GAAjCW,EAFyB,EAE/BJ,KAAcO,EAFiB,EAEjBA,QAEtB,OACE,yBAAKnB,UAAU,aACXmB,GAAW,uBAAGnB,UAAU,oCAAb,YAEb,wBAAIA,UAAU,kBAAkBC,IAAMI,GAAaA,GAEjDW,EAAOF,KAAI,SAAAC,GAAG,OACZ,kBAAC,EAAD,eACEd,IAAMc,EAAIlB,IACLkB,SEWFU,MAvBf,YAAyC,EAAhBC,GAAiB,IAAD,EACD5C,mBAAS,CAAE,WADV,mBAC/B6C,EAD+B,KACnB9C,EADmB,KAGvC,OACE,oCACE,8CACA,kBAAC,EAAD,CAAaA,cAAgBA,IAC7B,6BACA,4BAEI8C,EAAWb,KAAI,SAAAT,GAAQ,OACrB,kBAAC,EAAD,CAASJ,IAAMI,EAAWA,SAAWA,UCVjDuB,IAASC,OAAO,kBAAC,EAAD,CAAcH,GAAK,UAAcI,SAASC,eAAe,U","file":"static/js/main.d56524cd.chunk.js","sourcesContent":["import React, { useState } from 'react'\nimport PropTypes from 'prop-types'\n\nexport const AddCategory = ({ setCategories }) => {\n\n  const [ inputValue, setInputValue ] = useState('')\n\n  const handleInputChange = (e) => {\n    if (e) setInputValue(e.target.value)\n  }\n\n  const handleSubmit = (e) => {\n    e.preventDefault()\n    if (inputValue.trim().length > 2) {\n      setCategories(cats => [ inputValue, ...cats ])\n      setInputValue('')\n    }\n  }\n\n  return (\n    <form onSubmit={ handleSubmit }>\n      <input\n        type=\"text\"\n        value={ inputValue }\n        onChange={ handleInputChange }\n        onClick={ () => { setInputValue('') } }\n      />\n    </form>\n  )\n}\n\nAddCategory.propTypes = {\n  setCategories: PropTypes.func.isRequired\n}\n\n","import React from 'react'\n\nexport const GifItem = ({ id, title, url }) => {\n  return (\n    <div className=\"card animate__animated animate__fadeIn\">\n      <img key={ id } src={ url } alt={ title } />\n      <p> { title }</p>\n    </div>\n  )\n}\nexport default GifItem\n","export const getImages = async (category) => {\n  const URL = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI(category) }&limit=10&api_key=oC8I9foQB9Y1uSSK4dEKfF38kcVQFAEa`\n  const res = await fetch(URL)\n  const { data } = await res.json()\n\n  const gifs = data.map(img => {\n    return {\n      id: img.id,\n      title: img.title,\n      url: img.images?.downsized_medium.url\n    }\n  })\n  // console.log(gifs)\n  // setImages(gifs)\n  return gifs\n}","import React from 'react'\nimport GifItem from './GifItem'\nimport { useFetchGifs } from './hooks/useFecthGifs'\n\nexport const GifList = ({ category }) => {\n\n  const { data: images, loading } = useFetchGifs(category)\n\n  return (\n    <div className=\"card-list\">\n      { loading && <p className=\"animate__animated animate__flash\">cargando</p> }\n\n      <h3 className=\"card-list-title\" key={ category }>{ category }</h3>\n      {\n        images.map(img => (\n          <GifItem\n            key={ img.id }\n            { ...img } />\n        ))\n      }\n    </div>\n  )\n}\n","import { useState, useEffect } from 'react'\nimport { getImages } from '../helpers/getGifs'\n\nexport const useFetchGifs = ( category ) => {\n\n  const [ state, setstate ] = useState({\n    data: [],\n    loading: true\n  })\n\n  useEffect(() => {\n    getImages(category)\n      .then(img => {\n        setstate({\n          data: img,\n          loading: false\n        })\n      })\n  }, [ category ])\n\n  return state\n}","import React, { useState } from 'react'\nimport PropTypes from 'prop-types'\nimport { AddCategory } from \"./components/AddCategory\";\nimport { GifList } from './components/GifList';\n\nfunction GifExpertApp ({ hi = 'Heyy!' }) {\n  const [ categories, setCategories ] = useState([ 'Vegeta' ])\n\n  return (\n    <>\n      <h2> GifExpert App</h2>\n      <AddCategory setCategories={ setCategories } />\n      <hr />\n      <ol>\n        {\n          categories.map(category =>\n            <GifList key={ category } category={ category } />\n          )\n        }\n      </ol>\n    </>\n  )\n}\n\nGifExpertApp.propTypes = {\n  hi: PropTypes.string\n}\n\nexport default GifExpertApp\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport '../node_modules/animate.css/animate.css'\nimport GifExpertApp from './GifExpertApp'\n\nReactDOM.render(<GifExpertApp hi={ 'hello' } />, document.getElementById('root'))\n"],"sourceRoot":""}